name: Publish Docker Image


on: [workflow_dispatch]

env:
  # TODO: Change variable to your image's name.
  IMAGE: github-k8s-runner
  GITHUB_SHA: ${{ github.sha }}
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: demo-cluster
  GKE_APP_NAME: k8s-runner-app
  GKE_SERVICE: gke-service
  GKE_SERVICE_ACCOUNT: gke-serviceaccount
  GKE_DEPLOYMENT_NAME: demo-shop-deployment
  GKE_REGION: europe-west3
  GKE_ZONE: europe-west3-a

jobs:
  Build:
    # Ensure lintAllTheThings job passes before pushing image.
    # needs: lintAllTheThings

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - uses: google-github-actions/setup-gcloud@v0.6.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}
          export_default_credentials: true 

      - name: Build and Push
        #run: docker build -t "us.gcr.io/ebo-sandbox/$IMAGE:${GITHUB_SHA:0:8}" .
        run: |-  
         docker build \
          --tag "$GKE_REGION-docker.pkg.dev/$GKE_PROJECT/$GKE_PROJECT/$GKE_APP_NAME:$GITHUB_SHA" \
          --build-arg ${GITHUB_SHA} \
          .
         gcloud auth configure-docker $GKE_REGION-docker.pkg.dev --quiet
         docker push "$GKE_REGION-docker.pkg.dev/$GKE_PROJECT/$GKE_PROJECT/$GKE_APP_NAME:$GITHUB_SHA"

  Deploy:
    runs-on: ubuntu-latest
    needs: Build

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.6.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
        export_default_credentials: true 

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.5.0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Deploy the new Docker image to the GKE cluster
    - name: Deploy
      run: |-
        envsubst < deployment.yml | kubectl apply -f -
